- name: Stop and remove Docker Compose services
  community.docker.docker_compose_v2:
    state: absent
    project_src: "{{ directory }}"
    files:
    - "{{ file }}"

- name: Deploy Docker Compose stack
  community.docker.docker_compose_v2:
    project_src: "{{ directory }}"
    files:
    - "{{ file }}"

- name: Get info on docker host and list containers matching the filter
  community.docker.docker_host_info:
    containers: true
    containers_all: true
  register: result

- name: Assert that two values are equal (Containers up and running)
  when:
    - database_type is not defined
  ansible.builtin.assert:
    that:
      - result.host_info.Containers == result.host_info.ContainersRunning
    fail_msg: >- 
          "Not all the containers are in the expected status: 
          Containers: {{ result.host_info.Containers }}. 
          Running: {{ result.host_info.ContainersRunning }}. 
    success_msg: "All the containers are in the expected status."

- name: Count completed containers (exited 0)
  when:
    - database_type is defined
    - database_type == "mongodb"
  set_fact:
    completed_containers_count:  "{{ result.containers 
              | selectattr('Status', 'search', '^Exited \\(0\\)')
              | list | length }}"

- name: Assert that two values are equal (Containers completed + running)
  when:
    - database_type is defined
    - database_type == "mongodb"
  ansible.builtin.assert:
    that:
      - result.host_info.Containers == result.host_info.ContainersRunning + (completed_containers_count | int)
    fail_msg: >- 
          "Not all the containers are in the expected status: 
          Containers: {{ result.host_info.Containers }}. 
          Running: {{ result.host_info.ContainersRunning }}. 
          Completed: {{ completed_containers_count }}"
    success_msg: "All the containers are in the expected status."
